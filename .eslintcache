[{"/Users/nickzimmermann/Projects/lego-trains/client/src/App.tsx":"1","/Users/nickzimmermann/Projects/lego-trains/client/src/components/Controller/index.tsx":"2","/Users/nickzimmermann/Projects/lego-trains/client/src/components/Container/index.tsx":"3","/Users/nickzimmermann/Projects/lego-trains/client/src/components/Inputs/Button/index.tsx":"4","/Users/nickzimmermann/Projects/lego-trains/client/src/components/Inputs/Number/index.tsx":"5","/Users/nickzimmermann/Projects/lego-trains/client/src/data/trains.ts":"6","/Users/nickzimmermann/Projects/lego-trains/client/src/lib/env.ts":"7","/Users/nickzimmermann/Projects/lego-trains/client/src/lib/Network/index.ts":"8","/Users/nickzimmermann/Projects/lego-trains/client/src/index.tsx":"9","/Users/nickzimmermann/Projects/lego-trains/client/src/screens/MainScreen.tsx":"10"},{"size":226,"mtime":1633744329154,"results":"11","hashOfConfig":"12"},{"size":2782,"mtime":1633746459431,"results":"13","hashOfConfig":"12"},{"size":211,"mtime":1612320719652,"results":"14","hashOfConfig":"12"},{"size":403,"mtime":1612320656995,"results":"15","hashOfConfig":"12"},{"size":429,"mtime":1612320666977,"results":"16","hashOfConfig":"17"},{"size":295,"mtime":1611822804599,"results":"18","hashOfConfig":"19"},{"size":547,"mtime":1612342619661,"results":"20","hashOfConfig":"12"},{"size":1107,"mtime":1633745791517,"results":"21","hashOfConfig":"12"},{"size":410,"mtime":1611819706210,"results":"22","hashOfConfig":"12"},{"size":985,"mtime":1633748023084,"results":"23","hashOfConfig":"12"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8xc6gx",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8wuzjb",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"15nq62v",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46"},"/Users/nickzimmermann/Projects/lego-trains/client/src/App.tsx",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/components/Controller/index.tsx",["47"],"import React from \"react\";\nimport Container from \"../Container\";\nimport Button from \"../Inputs/Button\";\nimport Number from \"../Inputs/Number\";\nimport Fetch from \"../../lib/Network\";\n\nconst STEP_SIZE = 5;\n\ninterface Props {\n  displayName: string;\n  deviceID: string;\n}\n\nconst Controller: React.FC<Props> = (props) => {\n  const [power, updatePowerValue] = React.useState(0);\n  const [direction, changeDirection] = React.useState(\"Forwards\");\n  const { displayName, deviceID } = props;\n  const handlePower = (adjustment: number) => {\n    new Fetch(`execute/${deviceID}`)\n      .setMethod(\"POST\")\n      .addHeader(\"Content-Type\", \"application/json\")\n      .setBody({\n        command: {\n          name: \"set_power\",\n          args: {\n            adjustment: adjustment,\n          },\n        },\n      })\n      .fetch()\n      .then((res) => {\n        console.log(res);\n        updatePowerValue(res.power);\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleBrake = () => {\n    updatePowerValue(0);\n    new Fetch(`execute/${deviceID}`)\n      .setMethod(\"POST\")\n      .addHeader(\"Content-Type\", \"application/json\")\n      .setBody({\n        command: { name: \"stop\" },\n      })\n      .fetch()\n      .then((res) => {\n        console.log(res);\n        updatePowerValue(res.power);\n      })\n      .catch((err) => console.log(err));\n  };\n  const handleDirection = () => {\n    new Fetch(`execute/${deviceID}`)\n      .setMethod(\"POST\")\n      .addHeader(\"Content-Type\", \"application/json\")\n      .setBody({\n        command: { name: \"change_direction\" },\n      })\n      .fetch()\n      .then((res) => {\n        console.log(res);\n        changeDirection(res.direction === -1 ? \"Backwards\" : \"Forwards\");\n        updatePowerValue(res.power);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Container className='controller-container'>\n      <h2>{displayName}</h2>\n      <p>I am going {direction}!</p>\n      <Container className='button-container'>\n        <Container className='joystick-container'>\n          <Container className='up-down-container'>\n            <Button\n              color='blue'\n              onClick={() => handlePower(STEP_SIZE * -1)}\n            >{`<`}</Button>\n            <p className='power-display'>{power}</p>\n            <Button\n              color='blue'\n              onClick={() => handlePower(STEP_SIZE * 1)}\n            >{`>`}</Button>\n          </Container>\n        </Container>\n        <Container className='joystick-container'>\n          <Button color='red' onClick={() => handleBrake()}>\n            STOP\n          </Button>\n          <Button color='gray' onClick={() => handleDirection()}>\n            DIRECTION\n          </Button>\n        </Container>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Controller;\n","/Users/nickzimmermann/Projects/lego-trains/client/src/components/Container/index.tsx",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/components/Inputs/Button/index.tsx",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/components/Inputs/Number/index.tsx",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/data/trains.ts",[],["48","49"],"/Users/nickzimmermann/Projects/lego-trains/client/src/lib/env.ts",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/lib/Network/index.ts",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/index.tsx",[],"/Users/nickzimmermann/Projects/lego-trains/client/src/screens/MainScreen.tsx",["50","51"],"import React from \"react\";\nimport Container from \"../components/Container\";\nimport Controller from \"../components/Controller\";\nimport Button from \"../components/Inputs/Button\";\nimport { TRAINS } from \"../data/trains\";\nimport Fetch from \"../lib/Network\";\n\nconst MainScreen = () => {\n  const [devices, updateDevices] = React.useState(new Array());\n  console.log(devices);\n  return (\n    <>\n      <h1>LEGO Powered Up</h1>\n      <Button\n        onClick={() => {\n          new Fetch(\"state/all-devices\")\n            .fetch()\n            .then((res) => updateDevices(res.connections))\n            .catch(() => updateDevices([]));\n        }}\n      >\n        Poll for Devices\n      </Button>\n      <br />\n      <Container className='generic-container'>\n        {devices.map((device) => (\n          <Controller\n            displayName={device.device.meta.name}\n            deviceID={device.device.meta.id}\n          />\n        ))}\n      </Container>\n    </>\n  );\n};\n\nexport default MainScreen;\n",{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":9,"column":51,"nodeType":"63","messageId":"64","endLine":9,"endColumn":62,"fix":"65"},"@typescript-eslint/no-unused-vars","'Number' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'TRAINS' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"68","text":"69"},"no-global-assign","no-unsafe-negation",[332,343],"[]"]